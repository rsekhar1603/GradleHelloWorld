buildscript {
	ext {
		springBootVersion = '1.4.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

jar {
	baseName = 'boot-gradle'
	//version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

war {
    baseName = 'boot-gradle'
    //version =  '0.1.0'
}
dependencies {
	compile('org.springframework.boot:spring-boot-starter-web','org.apache.tomcat.embed:tomcat-embed-jasper'
	,'javax.servlet:jstl')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
task encodePassword(type: JavaExec) {
	  classpath = sourceSets.test.runtimeClasspath
	  main = 'com.leanstacks.ws.util.BCryptPasswordEncoderUtil'
	  if(project.hasProperty('mainargs')) {
	    args(mainargs.split(','))
	 }
	  
task build(dependsOn: 'buildProject') << {
	   println "------------------------"
	   println "Deploying Start...."
	   copy{
	        from "build/libs"
	        into "/usr/local/tomcat/webapps"
	      }
	    println "Deploying End...."
	    println "------------------------"
	}
	task buildProject (overwrite: true, dependsOn: ['cleanProject','war']) {
		println "------------------------"
		println "Building war file...." 
		println "------------------------"
	}
	task cleanProject(overwrite: true, dependsOn: cleanBuild) {
	
		println "------------------------"
		println "Cleaning build files...."
		println "------------------------"
	}
}
